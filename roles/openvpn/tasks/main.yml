- name: Update apt cache
  apt:
    update_cache: yes

- name: Install OpenVPN and Easy-RSA
  apt:
    name:
      - openvpn
      - easy-rsa
    state: present

- name: Copy Easy-RSA files to OpenVPN directory
  command: make-cadir /etc/openvpn/easy-rsa
  args:
    creates: /etc/openvpn/easy-rsa

- name: Configure Easy-RSA variables
  template:
    src: vars.j2
    dest: /etc/openvpn/easy-rsa/vars

- name: Initialize PKI
  command: ./easyrsa init-pki
  args:
    chdir: /etc/openvpn/easy-rsa
    creates: /etc/openvpn/easy-rsa/pki

- name: Build CA
  command: ./easyrsa --batch build-ca nopass
  args:
    chdir: /etc/openvpn/easy-rsa
    creates: /etc/openvpn/easy-rsa/pki/ca.crt

- name: Generate server certificate and key
  command: ./easyrsa --batch build-server-full server nopass
  args:
    chdir: /etc/openvpn/easy-rsa
    creates: /etc/openvpn/easy-rsa/pki/issued/server.crt

- name: Generate Diffie-Hellman parameters
  command: ./easyrsa gen-dh
  args:
    chdir: /etc/openvpn/easy-rsa
    creates: /etc/openvpn/easy-rsa/pki/dh.pem

- name: Generate HMAC signature
  command: openvpn --genkey --secret /etc/openvpn/ta.key
  args:
    creates: /etc/openvpn/ta.key

- name: Copy necessary files to OpenVPN directory
  copy:
    src: "/etc/openvpn/easy-rsa/pki/{{ item.src }}"
    dest: "/etc/openvpn/{{ item.dest }}"
    remote_src: yes
  loop:
    - { src: 'ca.crt', dest: 'ca.crt' }
    - { src: 'issued/server.crt', dest: 'server.crt' }
    - { src: 'private/server.key', dest: 'server.key' }
    - { src: 'dh.pem', dest: 'dh.pem' }

- name: Configure OpenVPN server
  template:
    src: server.conf.j2
    dest: /etc/openvpn/server.conf

- name: Enable IP forwarding
  sysctl:
    name: net.ipv4.ip_forward
    value: '1'
    state: present
    reload: yes

- name: Start and enable OpenVPN service
  systemd:
    name: openvpn@server
    state: started
    enabled: yes

- name: Generate client certificate
  command: ./easyrsa --batch build-client-full {{ client_name }} nopass
  args:
    chdir: /etc/openvpn/easy-rsa
    creates: /etc/openvpn/easy-rsa/pki/issued/{{ client_name }}.crt



- name: Ensure OpenVPN files exist
  stat:
    path: "{{ item }}"
  register: file_stats
  loop:
    - /etc/openvpn/ca.crt
    - "/etc/openvpn/easy-rsa/pki/issued/{{ client_name }}.crt"
    - "/etc/openvpn/easy-rsa/pki/private/{{ client_name }}.key"
    - /etc/openvpn/ta.key

- name: Debug file stats
  debug:
    var: file_stats

- name: Ensure correct permissions on OpenVPN files
  file:
    path: "{{ item.item }}"
    mode: '0644'
  loop: "{{ file_stats.results }}"
  when: item.stat.exists

- name: Check if OpenVPN is installed
  command: which openvpn
  register: openvpn_check
  ignore_errors: yes

- name: Debug OpenVPN installation
  debug:
    var: openvpn_check

- name: Check OpenVPN files
  stat:
    path: "{{ item }}"
  register: openvpn_files
  loop:
    - /etc/openvpn/ca.crt
    - /etc/openvpn/server.crt
    - /etc/openvpn/server.key
    - /etc/openvpn/dh.pem
    - /etc/openvpn/ta.key

- name: Debug OpenVPN files
  debug:
    var: openvpn_files

- name: Create OpenVPN directory
  file:
    path: /etc/openvpn
    state: directory
    mode: '0755'

- name: Generate OpenVPN CA
  command: >
    openssl req -x509 -nodes -days 3650 -newkey rsa:2048
    -keyout /etc/openvpn/ca.key -out /etc/openvpn/ca.crt
    -subj "/CN=OpenVPN-CA"
  args:
    creates: /etc/openvpn/ca.crt

- name: Generate OpenVPN server key and certificate
  command: >
    openssl req -x509 -nodes -days 3650 -newkey rsa:2048
    -keyout /etc/openvpn/server.key -out /etc/openvpn/server.crt
    -subj "/CN=OpenVPN-Server"
  args:
    creates: /etc/openvpn/server.crt

- name: Generate DH parameters
  command: openssl dhparam -out /etc/openvpn/dh.pem 2048
  args:
    creates: /etc/openvpn/dh.pem

- name: Generate TLS auth key
  command: openvpn --genkey --secret /etc/openvpn/ta.key
  args:
    creates: /etc/openvpn/ta.key

- name: Check if all OpenVPN files exist
  set_fact:
    all_files_exist: "{{ openvpn_files.results | map(attribute='stat.exists') | list | min }}"

- name: Generate client configuration
  template:
    src: client.ovpn.j2
    dest: "/root/{{ client_name }}.ovpn"
  vars:
    ca_content: "{{ lookup('file', '/etc/openvpn/ca.crt') }}"
    cert_content: "{{ lookup('file', '/etc/openvpn/server.crt') }}"
    key_content: "{{ lookup('file', '/etc/openvpn/server.key') }}"
    ta_key_content: "{{ lookup('file', '/etc/openvpn/ta.key') }}"
  when: all_files_exist | bool

- name: Fetch client configuration
  fetch:
    src: "/root/{{ client_name }}.ovpn"
    dest: "./{{ client_name }}.ovpn"
    flat: yes
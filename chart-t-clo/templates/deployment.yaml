apiVersion: apps/v1
kind: Deployment
metadata:
  name: app-deployment

spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: sample-app
  strategy:
    rollingUpdate:
      maxSurge: 1 # as an absolute number of replicas
      maxUnavailable: 25% # as % of replicas
    type: RollingUpdate
  minReadySeconds: 5 # Using minReadySeconds to add a readiness buffer.
  template:
    metadata:
      labels:
        app: sample-app
    spec:
      containers:
        - name: app
          image: "ghcr.io/msc1-nan24/t-clo-app:{{.Chart.AppVersion}}"
          resources:
            requests:
              memory: {{ .Values.memoryRequest }}
              cpu: {{ .Values.cpuRequest }}
            limits:
              memory: {{ .Values.memoryLimit }}
              cpu: {{ .Values.cpuLimit }}
          ports:
            - containerPort: 80
          readinessProbe: # Incorporating probes.
            httpGet:
              path: /
              port: 80
            initialDelaySeconds: 10
            periodSeconds: 30
            failureThreshold: 2
          env:
            - name: APP_DEBUG
              value: "{{ .Values.debug }}"
            - name: APP_ENV
              value: "production"
            - name: APP_KEY
              value: "{{ .Values.appKey }}"
            - name: DB_CONNECTION
              value: mysql
            - name: DB_HOST
              value: "{{ .Values.mysql.host }}"
            - name: DB_PORT
              value: "{{ .Values.mysql.port }}"
            - name: DB_DATABASE
              value: "{{ .Values.mysql.db }}"
            - name: DB_USERNAME
              value: "{{ .Values.mysql.username }}"
            - name: DB_PASSWORD
              value: "{{ .Values.mysql.password }}"
            - name: APP_URL
              value: "APP_URL=http://localhost/app"
